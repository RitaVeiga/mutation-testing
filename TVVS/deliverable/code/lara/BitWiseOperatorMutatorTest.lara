import kadabra.mutation.BitWiseOperatorMutator;
import weaver.WeaverJps;
import lara.Io;

aspectdef BitWiseOperatorMutatorTest
input outputPath end

var $jp = WeaverJps.root();
var counter = 0;

var mutator = new BitWiseOperatorMutator($jp, "|", "lhs", "^", "rhs", "&");

while(mutator.hasMutations()) {
	// Mutate
	mutator.mutate();

	// Print
saveFile(outputPath+ "/	" + counter);

	// Restore operator
	mutator.restore();
}

var mutator2 = new BitWiseOperatorMutator($jp, "~", "");

while(mutator2.hasMutations()) {
	// Mutate
	mutator2.mutate();

	// Print
	saveFile(outputPath+ "/" + counter);

	// Restore operator
	mutator2.restore();
}

function saveFile(path){
	var outputFolder = Io.getPath(path);
	counter++;

	// Write modified code
	Weaver.writeCode(outputFolder);
}
end